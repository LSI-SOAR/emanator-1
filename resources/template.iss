; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "<%- title %>"
#define MyAppVersion "<%- package.version %>"
#define MyAppPublisher "<%- author %>"
#define MyAppURL "<%- url %>"
#define MyAppExeName "<%- ident+'.exe' %>"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId=<%- guid %>
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf64}\<%- group+'\\'+identUCFC %>
DisableDirPage=yes
UsePreviousAppDir=no
OutputBaseFilename=<%- ident %>-windows-<%- package.version %><%= suffix %>
OutputDir=..\release\setup
SetupIconFile=<%- path.join(RESOURCES,ident+'.ico') %>
Compression=lzma/normal
SolidCompression=yes
;PrivilegesRequired=admin
AlwaysShowComponentsList=False
ShowComponentSizes=False
RestartIfNeededByRun=False
MinVersion=0,6.0
UserInfoPage=False
DefaultGroupName=<%- group %>
UninstallDisplayIcon={app}\<%- ident %>.exe
CloseApplications=force
; "ArchitecturesAllowed=x64" specifies that Setup cannot run on
; anything but x64.
ArchitecturesAllowed=x64
; "ArchitecturesInstallIn64BitMode=x64" requests that the install be
; done in "64-bit mode" on x64, meaning it should use the native
; 64-bit Program Files directory and the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64
WizardSmallImageFile=<%- path.join(RESOURCES,'setup-55x58.bmp') %>

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
<% if(options.fw) { %>
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""<%- title %>"" program=""{app}\{#MyAppExeName}"" dir=in action=allow enable=yes"; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""<%- title %>"" program=""{app}\{#MyAppExeName}"" dir=out action=allow enable=yes"; Flags: runhidden;
<% } %>
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall

[Files]
Source: "..\release\build\*"; DestDir: {app}; Flags: recursesubdirs ignoreversion

[InstallDelete]
Type: filesandordirs; Name: "{app}"

<% if(USE_RAR) { %>
[Run]
Filename: "{app}\package.nw\node-modules.exe"; Parameters: "/s /y"; StatusMsg: "Installing Dependencies..."; Flags: runhidden
Filename: "{app}\package.nw\lib.exe"; Parameters: "/s /y"; StatusMsg: "Installing UI Components..."; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: "{app}\package.nw\node_modules"
Type: filesandordirs; Name: "{app}\package.nw\lib"
<% } %>
