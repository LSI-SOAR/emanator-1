#! /usr/bin/env node

const fs = require('fs-extra');
const os = require('os');
const vm = require('vm');
const events = require('events');
const path = require('path');
const colors = require('colors');
const mkdirp = require('mkdirp');
const _module_ = require('module');

const Utils = require('./lib/utils');
const Git = require('./lib/tools/git');

const pkg = require('./package');
const Emanator = require('./emanator');
class Emanate extends events.EventEmitter {
	constructor() {
		super();
		this.utils = new Utils(this);
		this.flags = this.utils.args();
        dpc(()=>{ this.main(); })
	}

	async main() {

		if(this.flags.v || this.flags.version) {
			console.log(`${pkg.version}`);
			return;
		}

		const gitResolver = Git.Resolver(this);
		const git = await gitResolver('N/A');

		const args = process.argv.slice(2).join(' ');
		let { base, organization, project } = this.utils.match(args,/(?<base>(git@|\w+@|https:\/\/)[\w-]+\.\w+[:\/])(?<organization>[\w]+)\/(?<project>[\w]+)(\.git)?/);
		if(base && organization && project) {

			const RELEASE = path.join(os.homedir(),'emanator');
			const PROJECT = path.join(RELEASE,organization,project+'/');
			const REPO = path.join(PROJECT,'repo');
			mkdirp.sync(PROJECT);

			let url = `${base}${organization}/${project}`;
			if(this.args['--no-ssh'] || this.args['--http'] || this.args['--https']) {
				let { base, address, organization, project } = this.utils.match(url,/(?<base>(git@|\w+@|https:\/\/)(?<address>[\w-]+\.\w+)[:\/])(?<organization>[\w]+)\/(?<project>[\w]+)(\.git)?/);
				if(base && address && organization && project) {
					url = `https://${address}/${organization}/${project}`;
				}
			}
			await git.clone(url, PROJECT, 'repo');

	        let filename = path.join(REPO,'emanate');
			if(!fs.existsSync(filename)) {
				console.log(`Unable to locate emanate file:`.red.bold,`${filename}`.bold);
				process.exit(1);
			}

	        require.main.paths.unshift(path.join(REPO,'node_modules'));
			this.emanate(filename);
		}
		else {
	        let filename = path.join(process.cwd(),'emanate');
	        if(!fs.existsSync(filename)) {
	        	console.log("Error: no 'emanate' file found in the current folder.");
	        	return;
	        }
	        this.emanate(filename);
		}

	}

	async emanate(filename) {

        require.main.paths.unshift(path.join(process.cwd(),'node_modules'));

    	try {
	    	let text = fs.readFileSync(filename).toString();
	    	
	    	text = `(async ()=>{\n${text}\n})();`;
			const sandbox = vm.createContext({
				process,
				console,
				Emanator,
				fs,
				path,
				mkdirp,
				colors
			},{ name : 'Emanator VM'});
			require('vm').runInContext(_module_.wrap(text),sandbox,{filename})({ }, require, module, filename, path.dirname(filename))
	    } catch(ex) {
	    	console.log(ex);
	    	console.log(ex.stack);
	    }

	}
}

if(!global.Emanate) {
	new Emanate();
}